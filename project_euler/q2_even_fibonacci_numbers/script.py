#!/usr/bin/env python

"""
Problem 2: Even Fibonacci numbers

Each new term in the Fibonacci sequence is generated by adding the previous two 
terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed 
four million, find the sum of the even-valued terms.
"""

def calculate_even_fibonacci_sum(threshold):
    # Track last 2 numbers of the sequence
    curr_num1 = 1
    curr_num2 = 2
    # Track even sum
    even_sum = 2
    while True:
        # Generate the next fibonacci number
        next_fib_num = curr_num1 + curr_num2
        # Check if generated number < threshold
        if next_fib_num > threshold:
            break
        # Only add even fibonacci numbers to sum
        if next_fib_num % 2 == 0:
            even_sum += next_fib_num
        # Update number trackers
        curr_num1 = curr_num2
        curr_num2 = next_fib_num
    
    return even_sum


if __name__ == "__main__":
    even_sum_lt_4000000 = calculate_even_fibonacci_sum(4000000)
    print("Even sum of all Fibonacci numbers < 4000000:", even_sum_lt_4000000)